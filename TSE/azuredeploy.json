{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string"
      },
  
      "_artifactsLocationSasToken": {
        "type": "securestring"
      },

      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "VNET-ASS0192066-WEU",
        "metadata": {
          "description": "The name of the virtual network provisioned for the deployment"
        }
      },
      "virtualNetworkRGName": {
        "type": "string",
        "defaultValue": "", 
        "metadata": {
          "description": "Resource Group Name for Vnet. For new VNet leave it empty, otherwise type in existing resource group name"
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "VNET-ASS0192066-Subnet-WEU",
        "metadata": {
          "description": "Subnet name for the virtual network where resources will be provisioned"
        }
      },
      "addressPrefix": {
        "type": "string",
        "defaultValue": "172.16.28.0/24",
        "metadata": {
          "description": "Virtual Network address CIDR"
        }
      },
      "subnetPrefix": {
        "type": "string",
        "defaultValue": "172.16.28.0/25",
        "metadata": {
          "description": "CIDR for the subnet where VMs will be placed"
        }
      },
      "masterNodeIPAddress": {
        "type": "string",
        "defaultValue": "172.16.28.6",
        "metadata": {
          "description": "IP address for the first master"
        }
      },
      "dataNodeIPOffSetFromMaster": {
        "type": "int",
        "defaultValue": 5,
        "metadata": {
          "description": "IP address from the master node, for example if the first master is 10.1.1.1, then the first dataNode would be 10.1.1.11"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A2_v2",
        "metadata": {
          "description": "The size of the VMs deployed in the cluster (defaults to Standard_DS14)"
        },
        "allowedValues": [
          "Standard_F8s_v2",
          "Standard_DS14",
          "Standard_DS13",
          "Standard_DS14_V2",
          "Standard_DS13_V2",
          "Standard_A2_v2"
        ]
      },
      "vmImage": {
        "type": "string",
        "defaultValue": "ClouderaCentOS6_8",
        "metadata": {
          "description": "The OS VM Image (Defaults to ClouderaCentOS6_7)"
        },
        "allowedValues": [
          "ClouderaCentOS6_7",
          "ClouderaCentOS6_8"
        ]
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "azureuser",
        "metadata": {
          "description": "Admin user name for the VMs"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password for the VMs (A mix of upper and lower-case characters, digits and symbols)"
        }
      },
      "dnsNamePrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique public DNS name where the VMs will be exposed"
        }
      },
      "storageAccountSuffix": {
        "defaultValue": "tata",
        "type": "string",
        "metadata": {
          "description": "A label between 3 and 11 alphanumeric characters, inclusive. The final Storage Account name will be [13 random characters][suffix]. Only new storage accounts are supported."
        }
      },
      "tshirtSize": {
        "type": "string",
        "defaultValue": "Prod",
        "allowedValues": [
          "Eval",
          "Prod"
        ],
        "metadata": {
          "description": "T-shirt size of the Cloudera cluster (Eval, Prod)"
        }
      },
      "numberOfDataNodes": {
        "type": "int",
        "defaultValue": 3,
        "metadata": {
          "description": "Number of data nodes for Prod (defaults to 3)"
        }
      },
      "masterStorageAccountType": {
        "type": "string",
        "defaultValue": "Premium_LRS",
        "metadata": {
          "description": "The type of the Storage Account to be created for master nodes (defaults to Premium_LRS)"
        }
      },
      "workerStorageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "metadata": {
          "description": "The type of the Storage Account to be created for worker nodes (defaults to Standard_LRS)"
        }
      },
      "cmUsername": {
        "type": "string",
        "defaultValue": "cmadmin",
        "metadata": {
          "description": "User name for the Cloudera Manager"
        }
      },
      "cmPassword": {
        "type": "securestring",
        "metadata": {
          "description": "password for the Cloudera Manager (A mix of upper and lower-case characters, digits and symbols)"
        }
      },
      "company": {
        "type": "string",
        "defaultValue": "Company",
        "metadata": {
          "description": "Your Company"
        }
      },
      "emailAddress": {
        "type": "string",
        "defaultValue": "email@yourcompany.com",
        "metadata": {
          "description": "your email"
        }
      },
      "businessPhone": {
        "type": "string",
        "defaultValue": "123456789",
        "metadata": {
          "description": "your business phone number"
        }
      },
      "firstName": {
        "type": "string",
        "defaultValue": "FirstName",
        "metadata": {
          "description": "Your FirstName"
        }
      },
      "lastName": {
        "type": "string",
        "defaultValue": "LastName",
        "metadata": {
          "description": "Your LastName"
        }
      },
      "jobRole": {
        "type": "string",
        "defaultValue": "Administrator",
        "metadata": {
          "description": "Job Role"
        },
        "allowedValues": [
          "Administrator",
          "Analyst (Industry/Finance)",
          "Analyst (Technical)",
          "Architect",
          "C level",
          "Consultant",
          "Developer",
          "Director",
          "Engineer",
          "Individual contributor",
          "Manager",
          "Partner",
          "Student",
          "VP"
        ]
      },
      "jobFunction": {
        "type": "string",
        "defaultValue": "Analytics / Business Intelligence",
        "metadata": {
          "description": "Job Function"
        },
        "allowedValues": [
          "Analytics / Business Intelligence",
          "Big Data / Architecture",
          "Data Warehouse / Management",
          "Data Science",
          "Database",
          "ETL / ELT",
          "Infrastructure",
          "IT",
          "Marketing / Sales",
          "Networking",
          "Manager",
          "Security / Compliance",
          "Storage"
        ]
      }
    },
    "variables": {  
      "masterStorageAccount": {
        "prefix": "[parameters('storageAccountSuffix')]",
        "type": "[parameters('masterStorageAccountType')]"
      },
      "workerStorageAccount": {
        "prefix": "[parameters('storageAccountSuffix')]",
        "type": "[parameters('workerStorageAccountType')]"
      },
      "sa": "[parameters('masterNodeIPAddress')]",
      "ipOctet01": "[concat(split(variables('sa'), '.')[0], '.', split(variables('sa'), '.')[1], '.')]",
      "ipOctet2": "[int(split(variables('sa'), '.')[2])]",
      "ipOctet3": "[int(split(variables('sa'), '.')[3])]",
      "datanodeIpOctet3": "[add(int(split(variables('sa'), '.')[3]), parameters('dataNodeIPOffSetFromMaster'))]",
  
      "clusterTshirtSizeProd": {
        "masterNodeCount": 3,
        "dataNodeCount": "[parameters('numberOfDataNodes')]",
        "highAvailability": "true"
      },
      "clusterSpec": "[variables('clusterTshirtSizeProd')]",
  
      "networkSpec": {
        "addressPrefix": "[parameters('addressPrefix')]",
        "subnetPrefix": "[parameters('subnetPrefix')]",
        "ipOctet01": "[variables('ipOctet01')]",
        "ipOctet2": "[variables('ipOctet2')]",
        "ipOctet3": "[variables('ipOctet3')]",
        "datanodeIpOctet3": "[variables('datanodeIpOctet3')]",
        "masterIP": "[variables('sa')]",
        "workerIP": "[concat(variables('ipOctet01'), add(variables('ipOctet2'), div(variables('datanodeIpOctet3'), 255)), '.', mod(variables('datanodeIpOctet3'), 255))]",
        "virtualNetworkName": "[parameters('virtualNetworkName')]",
        "virtualNetworkRGName": "[parameters('virtualNetworkRGName')]",
        "virtualNetworkSubnetName": "[parameters('subnetName')]"
      },
      "vmImageInfo": {
        "ClouderaCentOS6_8": {
          "plan": {
            "name": "6_8",
            "publisher": "cloudera",
            "product": "cloudera-centos-os"
          },
          "imageReference": {
            "publisher": "cloudera",
            "offer": "cloudera-centos-os",
            "sku": "6_8",
            "version": "latest"
          }
        },
        "ClouderaCentOS6_7": {
          "plan": {
            "name": "cloudera-centos-6",
            "publisher": "cloudera",
            "product": "cloudera-centos-6"
          },
          "imageReference": {
            "publisher": "cloudera",
            "offer": "cloudera-centos-6",
            "sku": "cloudera-centos-6",
            "version": "latest"
          }
        }
      },
      "vmSpec": {
        "vmSize": "[parameters('vmSize')]",
        "imageInfo": "[variables('vmImageInfo')[parameters('vmImage')]]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]",
        "masterNodeASName": "[concat(parameters('dnsNamePrefix'), '-mnAS')]",
        "dataNodeASName": "[concat(parameters('dnsNamePrefix'), '-dnAS')]"
      },

      "existingVNetId": "[resourceId(parameters('virtualNetworkRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
      "VNetId": "[variables('existingVNetId')]",
      "installCDH": "True"
  
    },
    "resources": [
      {
        "name": "Shared-Resources",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/Shared-Resources.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "networkSpec": {
              "value": "[variables('networkSpec')]"
            },
            "masterNodeASName": {
              "value": "[variables('vmSpec').masterNodeASName]"
            },
            "dataNodeASName": {
              "value": "[variables('vmSpec').dataNodeASName]"
            }
          }
        }
      },
      {
        "name": "master-node",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-02-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/shared-resources"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/master-node.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetID": {
              "value": "[variables('VNetId')]"
            },
            "dnsNamePrefix": {
              "value": "[parameters('dnsNamePrefix')]"
            },
            "storageAccount": {
              "value": "[variables('masterStorageAccount')]"
            },
            "vmCount": {
              "value": "[variables('clusterSpec').masterNodeCount]"
            },
            "vmSpec": {
              "value": "[variables('vmSpec')]"
            },
            "networkSpec": {
              "value": "[variables('networkSpec')]"
            },
            "clusterSpec": {
              "value": "[variables('clusterSpec')]"
            }
          }
        }
      },
      {
        "name": "data-node",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-02-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/shared-resources"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/data-node-ds13.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetID": {
              "value": "[variables('VNetId')]"
            },
            "dnsNamePrefix": {
              "value": "[parameters('dnsNamePrefix')]"
            },
  
            "storageAccount": {
              "value": "[variables('workerStorageAccount')]"
            },
            "vmCount": {
              "value": "[variables('clusterSpec').dataNodeCount]"
            },
            "vmSpec": {
              "value": "[variables('vmSpec')]"
            },
            "networkSpec": {
              "value": "[variables('networkSpec')]"
            },
            "clusterSpec": {
              "value": "[variables('clusterSpec')]"
            }
          }
        }
      },
      {
        "name": "setup-cloudera",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-02-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/data-node",
          "Microsoft.Resources/deployments/master-node"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/setup-cloudera.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "dnsNamePrefix": {
              "value": "[parameters('dnsNamePrefix')]"
            },
  
            "vmSpec": {
              "value": "[variables('vmSpec')]"
            },
            "networkSpec": {
              "value": "[variables('networkSpec')]"
            },
            "clusterSpec": {
              "value": "[variables('clusterSpec')]"
            },
            "fqdn": {
              "value": "[reference('master-node').outputs.fqdn.value]"
            },
            "cmUsername": {
              "value": "[parameters('cmUsername')]"
            },
            "cmPassword": {
              "value": "[parameters('cmPassword')]"
            },
            "company": {
              "value": "[parameters('Company')]"
            },
            "emailAddress": {
              "value": "[parameters('emailAddress')]"
            },
            "businessPhone": {
              "value": "[parameters('businessPhone')]"
            },
            "firstName": {
              "value": "[parameters('firstName')]"
            },
            "lastName": {
              "value": "[parameters('lastName')]"
            },
            "jobRole": {
              "value": "[parameters('jobRole')]"
            },
            "jobFunction": {
              "value": "[parameters('jobFunction')]"
            },
            "installCDH": {
              "value": "[variables('installCDH')]"
            }
          }
        }
      }
    ],
    "outputs": {
    }
}